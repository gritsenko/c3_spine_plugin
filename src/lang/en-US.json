{
  "languageTag": "en-US",
  "fileDescription": "Strings for Spine Plugin",
  "text": {
    "plugins": {
      "gritsenko_spine": {
        "name": "Spine",
        "description": "Spine plugin, render to textures",
        "help-url": "https://gritsenko.github.io/c3_spine_plugin/",
        "properties": {
          "json": {
            "name": ".json path",
            "desc": "path to json file i.e. \"character.json\""
          },
          "atlas": {
            "name": ".atlas path",
            "desc": "path to atlas file i.e. \"character.atlas\""
          },
          "png": {
            "name": ".png path(s)",
            "desc": "path to png file(s) i.e. \"character.png\" or \"character.png,character2.png\""
          },
          "skin": {
            "name": "Skin",
            "desc": "Active skin name(s) i.e. \"fighter\" or \"fighter,sword-large\""
          },
          "animation": {
            "name": "Animation",
            "desc": "Active animation name"
          },
          "skeleton": {
            "name": "Skeleton",
            "desc": "Active Skeleton name"
          },
          "scale": {
            "name": "Scale",
            "desc": "Set scale of skeleton inside object frame"
          },
          "pre-mult-alpha": {
            "name": "PreMultiplyAlpha",
            "desc": "Pre Multiply Alpha Texture"
          },
          "collisions": {
            "name": "Enable collisions",
            "desc": "Whether the object will register collision events or not."
          },
          "default-mix": {
            "name": "Default mix",
            "desc": "Set default mix time between animations (s)"
          },
          "render-quality": {
            "name": "Render quality",
            "desc": "Render quality (1.0 is normal), upsamples (above 1.0) or downsamples (below 1.0) the skeleton render from the original size."
          },
          "keep-aspect-ratio": {
            "name": "Keep aspect",
            "desc": "Keep aspect ratio of the character or stretch it to object bounding box"
          },
          "debug": {
            "name": "Debug",
            "desc": "Enable debug messages to dev console."
          },
          "bbox-override": {
            "name": "BBox override",
            "desc": "Override skeleton bounding box."
          },
          "bbox-offset-x": {
            "name": "BBox offset x",
            "desc": "Bounding box offset X."
          },
          "bbox-offset-y": {
            "name": "BBox offset y",
            "desc": "Bounding box offset Y."
          },
          "bbox-size-x": {
            "name": "BBox size x",
            "desc": "Bounding box size x."
          },
          "bbox-size-y": {
            "name": "BBox size y",
            "desc": "Bounding box size y."
          }
        },
        "aceCategories": {
          "spine": "Spine",
          "data": "Data"
        },
        "conditions": {
          "on-web-gl-context-lost": {
            "list-name": "On WebGL context lost",
            "display-text": "On WebGL context lost",
            "description": "Triggered On WebGL context lost."
          },
          "on-web-gl-context-restored": {
            "list-name": "On WebGL context restored",
            "display-text": "On WebGL context restored",
            "description": "Triggered On WebGL context restored."
          },
          "on-skeleton-loaded": {
            "list-name": "On skeleton loaded",
            "display-text": "On skeleton loaded",
            "description": "Triggered skeleton was loaded."
          },
          "is-skeleton-loaded": {
            "list-name": "Is skeleton loaded",
            "display-text": "Is skeleton loaded",
            "description": "True if skeleton was loaded."
          },
          "on-animation-finished": {
            "list-name": "On animation finished",
            "display-text": "On animation {0} finished on track {1}",
            "description": "Triggered when specified animation finished.",
            "params": {
              "animation-name": {
                "name": "Animation name",
                "desc": "Animation name"
              },
              "track-index": {
                "name": "Track index",
                "desc": "Track index"
              }
            }

          },
          "compare-value": {
            "list-name": "Compare value",
            "display-text": "Key {0} value {1} {2}",
            "description": "Compare the value of a key in the data.",
            "params": {
              "value": {
                "name": "Value",
                "desc": "Value"
              },
              "comparison": {
                "name": "Comparison",
                "desc": "Comparison"
              },
              "path": {
                "name": "Path",
                "desc": "Path"
              }
            }
          },
          "for-each": {
            "list-name": "For each",
            "display-text": "For each {0}",
            "description": "Loop over path.",
            "params": {
              "path": {
                "name": "Path",
                "desc": "Path"
              }
            }
          },
          "on-any-animation-finished": {
            "list-name": "On any animation finished",
            "display-text": "On any animation finished",
            "description": "Triggered on any animation were finished."
          },
          "is-animation-playing": {
            "list-name": "Is animation playing",
            "display-text": "Is animation {0} playing on track {1}",
            "description": "Is animation playing.",
            "params": {
              "animation-name": {
                "name": "Animation name",
                "desc": "Animation name"
              },
              "track-index": {
                "name": "Track index",
                "desc": "Track index"
              }
            }
          },
          "on-error": {
            "list-name": "On error",
            "display-text": "On error",
            "description": "Triggered on any spine error, error message in error expression."
          },
          "on-event": {
            "list-name": "On animation event",
            "display-text": "On event {0} on track {1}",
            "description": "Triggered on specified animation event on specified track.",
            "params": {
              "event-name": {
                "name": "Event name",
                "desc": "Event name"
              },
              "track-index": {
                "name": "Track index",
                "desc": "Track index"
              }
            }
          },
          "on-any-event": {
            "list-name": "On any animation event",
            "display-text": "On any animation event on track {0}",
            "description": "Triggered on any event on specified track.",
            "params": {
              "track-index": {
                "name": "Track index",
                "desc": "Track index"
              }
            }
          },          
          "is-bone-control-property-active": {
            "list-name": "Is bone control property active",
            "display-text": "Is {0} {1} control active",
            "description": "Is bone control property active.",
            "params": {
              "bone": {
                "name": "Bone",
                "desc": "Name of bone."
              },
              "property": {
                "name": "Property",
                "desc": "Property to control.",
                "items": {
                  "x": "X",
                  "y": "Y",
                  "rotation": "Rotation",
                  "scale-x": "Scale X",
                  "scale-y": "Scale Y"
                }
              }
            }
          }
        },
        "actions": {
          "set-skin": {
            "list-name": "Set skin",
            "display-text": "Set skin {0}",
            "description": "Set skin by name.",
            "params": {
              "skin-name": {
                "name": "Skin name",
                "desc": "Skin name"
              }
            }
          },
          "flip": {
            "list-name": "Flip",
            "display-text": "Flip {0}",
            "description": "Flip render (e.g. mirror).",
            "params": {
              "is-flipped": {
                "name": "Is flipped",
                "desc": "Is flipped"
              }
            }
          },
          "set-animation": {
            "list-name": "Set animation",
            "display-text": "Set animation {0} start at {2} (loop: {1}) on track {3}",
            "description": "Set animation by name.",
            "params": {
              "animation-name": {
                "name": "Animation name",
                "desc": "Animation name"
              },
              "loop": {
                "name": "Loop",
                "desc": "Loop animation"
              },
              "start": {
                "name": "Start at",
                "desc": "Start animation at location, beginning, current time in seconds or current ratio between start and end of animation (0-1).",
                "items": {
                  "beginning": "beginning",
                  "current-time": "current time",
                  "current-ratio": "current ratio"
                }
              },
              "track-index": {
                "name": "Track index",
                "desc": "Track index"
              }
            }
          },
          "set-animation-time": {
            "list-name": "Set animation time",
            "display-text": "Set animation time in {0} to {1} on track {2}",
            "description": "Set animation time by seconds or ratio.",
            "params": {
              "units": {
                "name": "Units",
                "desc": "Set to time in seconds or ratio between start and end of animation (0-1).",
                "items": {
                  "seconds": "seconds",
                  "ratio": "ratio"
                }
              },          
              "time": {
                "name": "Time",
                "desc": "Time in seconds or ratio (0-1)"
              },
              "track-index": {
                "name": "Track index",
                "desc": "Track index"
              }
            }
          },
          "delete-animation": {
            "list-name": "Delete animation",
            "display-text": "Delete animation with mix {1} on track {0}",
            "description": "Delete animation from track with mix duration to empty track.",
            "params": {
              "track-index": {
                "name": "Track index",
                "desc": "Track index"
              },
              "mix-duration": {
                "name": "Mix duration",
                "desc": "Mix duration in seconds to empty animation on track."
              }
            }
          },
          "play": {
            "list-name": "Play spine animation",
            "display-text": "Play spine animation",
            "description": "Play current spine animation.",
            "params": { }
          },
          "stop": {
            "list-name": "Stop current spine animation",
            "display-text": "Stop current spine animation",
            "description": "Stop current spine animation.",
            "params": { }
          },
          "update-bounds": {
            "list-name": "Update spine bounds",
            "display-text": "Update spine bounds",
            "description": "Fit spine model to bounds of c3 object.",
            "params": { }
          },
          "set-animation-speed": {
            "list-name": "Set animation speed",
            "display-text": "Set animation speed {0}x",
            "description": "Set animation speed. 1 = 1x speed, 2 = 2x speed, 0.5 = 1/2x speed.",
            "params": {
              "speed": {
                "name": "Speed",
                "desc": "Scaling animation speed."
              }
            }
          },
          "set-attachment": {
            "list-name": "Set attachment",
            "display-text": "Set slot {0} to attachment {1}",
            "description": "Set attachment to slot by name.",
            "params": {
              "slot-name": {
                "name": "Slot name",
                "desc": "Slot name"
              },
              "attachment-name": {
                "name": "Attachment name",
                "desc": "Attachment name"
              }
            }
          },
          "set-region": {
            "list-name": "Set region",
            "display-text": "Set (slot {0}, attachment {1}) region to {2}",
            "description": "Set region of attachment by name of current skin (e.g. set texture).",
            "params": {
              "slot-name": {
                "name": "Slot name",
                "desc": "Slot name"
              },
              "attachment-name": {
                "name": "Attachment name",
                "desc": "Attachment name (placeholder name)."
              },
              "region-name": {
                "name": "Region name",
                "desc": "Region name"
              }
            }
          },
          "create-custom-skin": {
            "list-name": "Create custom skin",
            "display-text": "Create custom skin {0}",
            "description": "Create custom skin.",
            "params": {
              "skin-name": {
                "name": "Skin name",
                "desc": "Skin name"
              }
            }
          },
          "add-custom-skin": {
            "list-name": "Add custom skin",
            "display-text": "Add skin {1} to custom skin {0}",
            "description": "Add skin to custom skin.",
            "params": {
              "skin-name": {
                "name": "Custom skin name",
                "desc": "Custom skin name"
              },
              "add-skin-name": {
                "name": "Add skin name",
                "desc": "Skin name to add to custom skin."
              }
            }
          },
          "set-custom-skin": {
            "list-name": "Set custom skin",
            "display-text": "Set custom skin {0}",
            "description": "Set custom skin.",
            "params": {
              "skin-name": {
                "name": "Skin name",
                "desc": "Skin name"
              }
            }
          },
          "set-custom-attachment-color": {
            "list-name": "Set custom skin attachment color",
            "display-text": "Set (skin {0}, slot{1}, attachment {2}) color to {3}",
            "description": "Set color of attachment by name in the custom skin and set skin.",
            "params": {
              "skin-name": {
                "name": "Skin name",
                "desc": "Custom skin name"
              },
              "slot-name": {
                "name": "Slot name",
                "desc": "Slot name"
              },
              "attachment-name": {
                "name": "Attachment name",
                "desc": "Attachment name (placeholder name)."
              },
              "color": {
                "name": "Color",
                "desc": "Color (use rgba())."
              }
            }
          },
          "set-custom-attachment-dark-color": {
            "list-name": "Set custom skin attachment dark color",
            "display-text": "Set (skin {0}, slot{1}, attachment {2}) dark color to {3}",
            "description": "Set dark color of attachment by name in the custom skin and set skin.",
            "params": {
              "skin-name": {
                "name": "Skin name",
                "desc": "Custom skin name"
              },
              "slot-name": {
                "name": "Slot name",
                "desc": "Slot name"
              },
              "attachment-name": {
                "name": "Attachment name",
                "desc": "Attachment name (placeholder name)."
              },
              "dark-color": {
                "name": "Dark color",
                "desc": "Dark color (use rgba())."
              }
            }
          },
          "set-slot-color": {
            "list-name": "Set slot color",
            "display-text": "Set (slot{0}) color to {1}",
            "description": "Temporarily set color of slot of current skin, until Set (Custom) Skin.",
            "params": {
              "slot-name": {
                "name": "Slot name",
                "desc": "Slot name"
              },
              "color": {
                "name": "Color",
                "desc": "Color (use rgba()) or # color."
              }
            }
          },
          "set-slot-dark-color": {
            "list-name": "Set slot dark color",
            "display-text": "Set (slot{0}) dark color to {1}",
            "description": "Temporarily set dark color of slot of current skin, until Set (Custom) Skin.",
            "params": {
              "slot-name": {
                "name": "Slot name",
                "desc": "Slot name"
              },
              "dark-color": {
                "name": "Dark color",
                "desc": "Dark color (use rgba()) or # color."
              }
            }
          },
          "apply-slot-colors": {
            "list-name": "Apply slot colors",
            "display-text": "Apply slot colors",
            "description": "Apply all slot colors, dark colors that were set.",
            "params": {
            }
          },
          "reset-slot-colors": {
            "list-name": "Reset slot colors",
            "display-text": "Reset slot colors",
            "description": "Reset all slot colors, dark colors that were set.",
            "params": {
            }
          },
          "update-b-boxes": {
            "list-name": "Update B Boxes",
            "display-text": "Update B Boxes",
            "description": "Update all bounding box attachments.",
            "params": {
            }
          },
          "set-animation-mix": {
            "list-name": "Set animation mix",
            "display-text": "Set mix from {0} to {1} with duration {2}",
            "description": "Set animation mix from one animation to another with a duration.",
            "params": {
              "from-name": {
                "name": "From animation",
                "desc": "Animation name to mix from."
              },
              "to-name": {
                "name": "To animation",
                "desc": "Animation name to mix to."
              },
              "duration": {
                "name": "Duration",
                "desc": "Duration for the mix."
              }
            }
          },
          "set-alpha": {
            "list-name": "Set animation alpha",
            "display-text": "Set alpha {0} on track {1}",
            "description": "Set alpha mix on track.",
            "params": {
              "alpha": {
                "name": "Alpha",
                "desc": "Alpha (0-1), for track to mix with animations on lower tracks."
              },
              "track-index": {
                "name": "Track index",
                "desc": "Track index to set alpha to."
              }
            }
          },
          "set-object-render-rate": {
            "list-name": "Set object render rate",
            "display-text": "Set object render rate to {0} ticks per render",
            "description": "Set object render rate to a number of ticks per render.",
            "params": {
              "render-rate": {
                "name": "Render rate",
                "desc": "Render rate (ticks per render.)"
              }
            }
          },
          "set-debug": {
            "list-name": "Enable debug",
            "display-text": "Set debug to {0}",
            "description": "Enable debug, send debug messages to dev console.",
            "params": {
              "enable": {
                "name": "Enable",
                "desc": "Enable or disable debug."
              }
            }
          },
          "set-debug-variable": {
            "list-name": "Set debug variable",
            "display-text": "Set debug {0} to {1}",
            "description": "Set spine plugin debug variable.",
            "params": {
              "name": {
                "name": "Name",
                "desc": "Name of variable."
              },
              "value": {
                "name": "Value",
                "desc": "Value of variable (string)."
              }
            }
          },
          "set-bone-control": {
            "list-name": "Set bone control",
            "display-text": "Set {0} {1} to {2}",
            "description": "Override bone property with value.",
            "params": {
              "bone": {
                "name": "Bone",
                "desc": "Name of bone."
              },
              "property": {
                "name": "Property",
                "desc": "Property to control.",
                "items": {
                  "x": "X",
                  "y": "Y",
                  "rotation": "Rotation",
                  "scale-x": "Scale X",
                  "scale-y": "Scale Y"
                }
              },
              "value": {
                "name": "Value",
                "desc": "Value of variable (string)."
              }
            }
          },
          "remove-bone-control": {
            "list-name": "Remove bone control",
            "display-text": "Remove {0} control of {1}",
            "description": "Remove bone control property.",
            "params": {
              "bone": {
                "name": "Bone",
                "desc": "Name of bone."
              },
              "property": {
                "name": "Property",
                "desc": "Property to control.",
                "items": {
                  "x": "X",
                  "y": "Y",
                  "rotation": "Rotation",
                  "scale-x": "Scale X",
                  "scale-y": "Scale Y"
                }
              }
            }
          },
          "remove-all-bone-control": {
            "list-name": "Remove all bone control",
            "display-text": "Remove {0} all control.",
            "description": "Remove all bone control properties.",
            "params": {
              "bone": {
                "name": "Bone",
                "desc": "Name of bone."
              }
            }
          },
          "set-skeletondata-render-quality": {
            "list-name": "Set skeltondata render quality",
            "display-text": "Set render quality to {0}",
            "description": "Set skeltondata render quality, requires layout restart.",
            "params": {
              "render-quality": {
                "name": "Render quality",
                "desc": "Render quality of skeletondata (1 is normal.)"
              },
              "track-index": {
                "name": "Track index",
                "desc": "Track index to set alpha to."
              }
            }
          },
          "set-value": {
            "list-name": "Set value",
            "display-text": "Set {1} to {0}",
            "description": "Set value at path. Create path if needed.",
            "params": {
              "value": {
                "name": "Value",
                "desc": "Value to set on path."
              },
              "path": {
                "name": "Path",
                "desc": "Path to set."
              }
            }
          },
          "set-null": {
            "list-name": "Set null",
            "display-text": "Set {0} to null",
            "description": "Set null at path. Create path if needed.",
            "params": {
              "path": {
                "name": "Path",
                "desc": "Path to set."
               }
              }
            },
            "set-json": {
              "list-name": "Set JSON",
              "display-text": "Set {0} to JSON {1}",
              "description": "Set JSON at path. Create path if needed.",
              "params": {
                "json-string": {
                  "name": "JSON",
                  "desc": "JSON string."
                },
                "path": {
                  "name": "Path",
                  "desc": "Path to set."
                  }
                }
            },
            "delete-key": {
              "list-name": "Delete key",
              "display-text": "Delete {0}",
              "description": "Delete key at path..",
              "params": {
                "path": {
                  "name": "Path",
                  "desc": "Path to delete."
                }
              }
          },
          "set-palette-color": {
            "list-name": "Set palette color",
            "display-text": "Set palette {0} color index {1} to {2}",
            "description": "Set palette color index  to RGBA value.",
            "params": {
              "palette-number": {
                "name": "Palette number",
                "desc": "Palette number"
              },
              "index": {
                "name": "Index",
                "desc": "Index"
              },
              "color": {
                "name": "Color",
                "desc": "Color (use rgba())."
              }
            }
          },
          "set-slot-palette": {
            "list-name": "Set slot palette",
            "display-text": "Set slot {0} to palette {1}",
            "description": "Set slot palette.",
            "params": {
              "slot-name": {
                "name": "Slot name",
                "desc": "Slot name"
              },              
              "palette-number": {
                "name": "Palette number",
                "desc": "Palette number"
              }
            }
          },
          "set-slot-palette-offset": {
            "list-name": "Set slot palette offset",
            "display-text": "Set slot {0} palette offset to {1}",
            "description": "Set slot palette offset.",
            "params": {
              "slot-name": {
                "name": "Slot name",
                "desc": "Slot name"
              },              
              "palette-offset": {
                "name": "Palette offset",
                "desc": "Palette offset"
              }
            }
          },
          "set-palette-default-colors": {
            "list-name": "Set palette to default colors",
            "display-text": "Set palette {0} colors to default colors",
            "description": "Set palette colors to default.",
            "params": {
              "palette-number": {
                "name": "Palette number",
                "desc": "Palette number"
              }
            }
          },
          "enable-palette-color": {
            "list-name": "Enable palette color",
            "display-text": "Enable palette color to {0}",
            "description": "Enable palette color for all slots.",
            "params": {
              "enable": {
                "name": "Enable",
                "desc": "Enable",
                "items": {
                  "enabled": "enabled",
                  "disabled": "disabled"
                }
              }
            }
          },
          "set-all-palette-colors-from-string": {
            "list-name": "Set all palette colors from string",
            "display-text": "Set all palette colors from {0}",
            "description": "Set all palette colors from hex string.",
            "params": {
              "value": {
                "name": "String",
                "desc": "Hex array string, RGBA order (FF12AB34CD...)"
              }
            }
          },
          "set-entry-palette-colors-from-string": {
            "list-name": "Set entry palette colors from string",
            "display-text": "Set entry {0} palette colors from {1}",
            "description": "Set entry palette colors from hex string.",
            "params": {
              "palette-number": {
                "name": "Palette number",
                "desc": "Palette number"
              },
              "value": {
                "name": "String",
                "desc": "Hex array string, RGBA order (FF12AB34CD...)"
              }
            }
          },
          "load-spine-files": {
            "list-name": "Load spine files",
            "display-text": "Load spine files {0}, {1}, {2}",
            "description": "Load spine files, if there were none specified, only can be done once.",
            "params": {
              "json-path": {
                "name": "JSON path",
                "desc": "JSON project file name or url."
              },
              "atlas-path": {
                "name": "Atlas path",
                "desc": "Atlas project file name or url."
              },
              "png-path": {
                "name": "PNG path",
                "desc": "PNG project file name or url."
              }
            }
          },
          "enable-sequence-autoplay": {
            "list-name": "Enable sequence autoplay",
            "display-text": "Sequence autoplay {0}, fps: {1}",
            "description": "Enable sequence autoplay.",
            "params": {
              "enable": {
                "name": "Enable",
                "desc": "Enable",
                "items": {
                  "enabled": "enable",
                  "disabled": "disable"
                }
              },
              "sequence-fps": {
                "name": "FPS",
                "desc": "Sequence FPS"
              }
            }
          }
        },
        "expressions": {
          "get-as-compact-string": {
            "description": "Get JSON as compact string.",
            "translated-name": "GetAsCompactString",
            "params": {
              "path": {
                "name": "Path",
                "desc": "Path"
              }
            }
          },
          "skins": {
            "description": "Get list of skins. separated by new lines",
            "translated-name": "Skins",
            "params": {}
          },
          "current-skin": {
            "description": "Get current skin name",
            "translated-name": "CurrentSkin",
            "params": {}
          },
          "current-animation": {
            "description": "Get current animation name on track.",
            "translated-name": "CurrentAnimation",
            "params": {
              "track-index": {
                "name": "Track index",
                "desc": "Track index"
              }
            }
          },
          "animations": {
            "description": "Get list of animations. separated by new lines",
            "translated-name": "Animations",
            "params": {}
          },
          "skins-count": {
            "description": "Get amount of skins.",
            "translated-name": "SkinsCount",
            "params": {}
          },
          "animations-count": {
            "description": "Get amount of animations.",
            "translated-name": "AnimationsCount",
            "params": {}
          },
          "skin-name": {
            "description": "Get skins name by index.",
            "translated-name": "SkinName",
            "params": {
              "index": {
                "name": "Index",
                "desc": "Skin index"
              }
            }
          },
          "animation-name": {
            "description": "Get animation name by index.",
            "translated-name": "AnimationName",
            "params": {
              "index": {
                "name": "Index",
                "desc": "Animation index"
              }
            }
          },
          "texture-width": {
            "description": "Spine rendered texture width.",
            "translated-name": "TextureWidth",
            "params": {}
          },
          "texture-height": {
            "description": "Spine rendered texture height.",
            "translated-name": "TextureHeight",
            "params": {}
          },
          "spine-error": {
            "description": "Error message for on error trigger.",
            "translated-name": "Error",
            "params": {}
          },
          "animation-start": {
            "description": "Animation start time on track.",
            "translated-name": "AnimationStart",
            "params": {
              "track-index": {
                "name": "Track index",
                "desc": "Track index"
              }
            }
          },
          "animation-end": {
            "description": "Animation end time on track.",
            "translated-name": "AnimationEnd",
            "params": {
              "track-index": {
                "name": "Track index",
                "desc": "Track index"
              }
            }
          },
          "animation-last": {
            "description": "Animation last time on track.",
            "translated-name": "AnimationLast",
            "params": {
              "track-index": {
                "name": "Track index",
                "desc": "Track index"
              }
            }
          },
          "track-time": {
            "description": "Animation track time on track.",
            "translated-name": "TrackTime",
            "params": {
              "track-index": {
                "name": "Track index",
                "desc": "Track index"
              }
            }
          },
          "alpha": {
            "description": "Animation alpha on track.",
            "translated-name": "Alpha",
            "params": {
              "track-index": {
                "name": "Track index",
                "desc": "Track index"
              }
            }
          },
          "spine-b-box-center-x": {
            "description": "SpineBBoxCenterX",
            "translated-name": "SpineBBoxCenterX",
            "params": {
              "slot": {
                "name": "Slot",
                "desc": "Name of slot."
              },
              "name": {
                "name": "BoundingBox",
                "desc": "Name of spine bounding box attachment."
              }
            }
          },
          "spine-b-box-center-y": {
            "description": "SpineBBoxCenterY",
            "translated-name": "SpineBBoxCenterY",
            "params": {
              "slot": {
                "name": "Slot",
                "desc": "Name of slot."
              },
              "name": {
                "name": "BoundingBox",
                "desc": "Name of spine bounding box attachment."
              }
            }
          },
          "spine-b-box-get-poly": {
            "description": "SpineBBoxGetPoly, get bounding box polygon array of points in JSON string format.",
            "translated-name": "SpineBBoxGetPoly",
            "params": {
              "slot": {
                "name": "Slot",
                "desc": "Name of slot."
              },
              "name": {
                "name": "BoundingBox",
                "desc": "Name of spine bounding box attachment."
              }
            }
          },
          "bone-x": {
            "description": "Bone control x",
            "translated-name": "BoneX",
            "params": {
              "bone": {
                "name": "Bone",
                "desc": "Name of bone."
              }
            }
          },
          "bone-y": {
            "description": "Bone control y",
            "translated-name": "BoneY",
            "params": {
              "bone": {
                "name": "Bone",
                "desc": "Name of bone."
              }
            }
          },
          "bone-rotation": {
            "description": "Bone control rotation",
            "translated-name": "BoneRotation",
            "params": {
              "bone": {
                "name": "Bone",
                "desc": "Name of bone."
              }
            }
          },
          "bone-scale-x": {
            "description": "Bone control scale x",
            "translated-name": "BoneScaleX",
            "params": {
              "bone": {
                "name": "Bone",
                "desc": "Name of bone."
              }
            }
          },
          "bone-scale-y": {
            "description": "Bone control scale y",
            "translated-name": "BoneScaleY",
            "params": {
              "bone": {
                "name": "Bone",
                "desc": "Name of bone."
              }
            }
          },
          "all-palette-color-string": {
            "description": "All palette color string",
            "translated-name": "AllPaletteColorString",
            "params": {
            }
          },
          "entry-palette-color-string": {
            "description": "Entry palette color string",
            "translated-name": "EntryPaletteColorString",
            "params": {
              "palette-number": {
                "name": "Palette number",
                "desc": "Palette number"
              }
            }
          },
          "get-value": {
            "description": "Get value at path",
            "translated-name": "GetValue",
            "params": {
              "path": {
                "name": "Path",
                "desc": "Path to get."
              }
            }
          },
          "current-value": {
            "description": "Data loop current value",
            "translated-name": "CurrentValue",
            "params": {
            }
          },
          "current-key": {
            "description": "Data loop current key",
            "translated-name": "CurrentKey",
            "params": {
            }
          },
          "bbox-offset-x": {
            "description": "Bounding box offset x",
            "translated-name": "BboxOffsetX",
            "params": {}
          },
          "bbox-offset-y": {
            "description": "Bounding box offset y",
            "translated-name": "BboxOffsetY",
            "params": {}
          },
          "bbox-size-x": {
            "description": "Bounding box size x",
            "translated-name": "BboxSizeX",
            "params": {}
          },
          "bbox-size-y": {
            "description": "Bounding box size y",
            "translated-name": "BboxSizeY",
            "params": {}
          },
          "skeleton-scale": {
            "description": "Skeleton scale",
            "translated-name": "SkeletonScale",
            "params": {}
          },        
          "get-event-data": {
            "description": "Get value field of the current event",
            "translated-name": "GetEventData",          
            "params": {
              "field": {
                "name": "Field",
                "desc": "The field of the event data to read (float,int,string,balance,volume,audiopath,event,track)"
              }
            }
          }             
        }
      }
    }
  }
}